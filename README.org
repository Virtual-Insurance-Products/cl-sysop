#+TITLE: Common Lisp System Operator

* Introduction
~cl-sysop~ allows you to specify /systems/ of /components/. It then
provides a framework to evaluate those specifications against actual
systems and determine what, if any, changes should be made in order to
make the system match the specification. 

If any changes would be required these are assembled into a plan,
which is then presented to you in the CL debugger. If you approve of
the plan you can then invoke the 'Apply Changes' restart and
~cl-sysop~ will make the system match the specification.

The system descriptions are constructed from CLOS instances.

There are classes provided for describing unix systems accessible via
SSH. The methods for executing steps of the plan are then able to
execute commands on remote hosts (as well as the localhost).

** Example
#+begin_src lisp
(in-package :cl-sysop)

(update
 ;; the following is a description of a system which is a localhost
 ;; (running cl-sysop) containing one file with a specified content.
 (localhost
  (make-instance 'fs-file
                 :full-path "/tmp/greet.txt"
                 :content "Hello, world! ")))
#+end_src

The ~localhost~ function takes a list of components as parameters. In
this case one has been provided. The value returned from ~(localhost
...)~ is a system (subclass of the ~system~ class). The ~#'update~
function then evaluates the system to determine whether what it
describes matches reality. If not the debugger pops up with a
~UPDATES-REQUIRED~ condition and you can either perform the
~APPLY-CHANGES~ restart, which will execute the shown plan /or/ you
can press 'q' (in SLIME) to not apply the changes. 

From the SLIME debugger you can also expand the stack frame for the
update call to look at the ~plan~ object (bound to that variable) in
more detail. 

SLIME is the main (currently) user interface to ~cl-sysop~. 

If you change the value of the ~:content~ slot in the above definition
and re-evaluate the ~update~ call (top level form) then cl-sysop will
check that the file exists, check its content, notice that it doesn't
match and then make a plan to update it. 

